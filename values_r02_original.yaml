global:
  imagePullSecrets:
    - literegistrykey
      #storageClass: "local-storage-kafka"
fullnameOverride: "kafka"
image:
  registry: docker.io
  repository: bitnami/kafka
  tag: 3.6.1-debian-11-r0
  debug: true
  pullPolicy: IfNotPresent
config: ""
heapOpts: -Xmx1024m -Xms1024m
listeners:
  client:
    containerPort: 9092
    protocol: SASL_SSL
    name: CLIENT
    sslClientAuth: ""
  controller:
    name: CONTROLLER
    containerPort: 9093
    protocol: PLAINTEXT
    sslClientAuth: ""
  interbroker:
    containerPort: 9094
    protocol: PLAINTEXT
    name: INTERNAL
    sslClientAuth: ""
  external:
    containerPort: 9095
    protocol: SASL_SSL
    name: EXTERNAL
    sslClientAuth: ""
sasl:
  enabledMechanisms: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
  interBrokerMechanism: PLAIN
  controllerMechanism: PLAIN
  interbroker:
    user: inter_broker_user
    password: ""
    clientId: inter_broker_client
    clientSecret: ""
  controller:
    user: controller_user
    password: ""
    clientId: controller_broker_client
    clientSecret: ""
  client:
    users:
      - kafkauser
    passwords: "1qayRGxGV0Y2ws"
  zookeeper:
    user: ""
    password: ""
tls:
  type: JKS
  pemChainIncluded: false
  existingSecret: "kafka-jks"
  autoGenerated: false
  keystorePassword: "alilite"
  truststorePassword: "alilite"
  jksKeystoreKey: kafka.keystore.jks
  jksTruststoreKey: kafka.truststore.jks
controller:
  replicaCount: 0
broker:
  replicaCount: 3
  resources:
    limits: {}
    requests: {}
  persistence:
    enabled: true
    storageClass: local-storage-kafka
    size: 50Gi
externalAccess:
  enabled: true
  autoDiscovery:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/kubectl
      tag: 1.25.8-debian-11-r2
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  broker:
    service:
      type: NodePort
      nodePorts:
        - 31090
        - 31091
        - 31092
volumePermissions:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r109
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
serviceAccount:
  create: true
rbac:
  create: true
metrics:
  kafka:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/kafka-exporter
      tag: 1.7.0-debian-11-r134
      pullPolicy: IfNotPresent
    extraFlags:
      tls.insecure-skip-tls-verify: ""
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  serviceMonitor:
    enabled: true
    namespace: "monitoring"
kraft:
  enabled: false
  existingClusterIdSecret: ""
zookeeper:
  enabled: true
  image:
    repository: bitnami/zookeeper
    tag: 3.8.2-debian-11-r68
  replicaCount: 3
  auth:
    client:
      enabled: false
  persistence:
    enabled: true
    storageClass: "local-storage-zookeeper"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  volumePermissions:
    enabled: true
    image:
      repository: bitnami/bitnami-shell
      tag: 11-debian-11-r109
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
externalZookeeper:
  servers: []